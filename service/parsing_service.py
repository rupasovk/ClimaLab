# -*- coding: utf-8 -*-
"""parsing_pogodaiklimat_up.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/149FS2QB2_9lyvzju7WB_dNw765qwBSi1

## Парсинг данных о климате c www.pogodaiklimat.ru
"""

import pandas as pd
from tqdm import tqdm
import seaborn as sns
import numpy as np
import json

fail_station_id = []
directory_name = "static/"


def get_weather_info(station_id):
    try:
        # Средние месячные и годовые температуры воздуха, concat потому что добавляется год
        air_temperature = pd.concat(
            pd.read_html(f"http://www.pogodaiklimat.ru/history/{station_id}.htm"),
            axis=1
        )
        # помещаем года и месяца в заголовки
        air_temperature = pd.DataFrame(air_temperature.values[1:],
                                    columns=air_temperature.iloc[0])
        # добавили тип спаршенных данных и номер метеостанции
        air_temperature['номер_станции'] = station_id
        air_temperature['вид_данных'] = 'Av_Temp'

        # Суммы выпавших осадков + приклеивание года
        sum_of_weather = pd.concat(
            pd.read_html(f"http://www.pogodaiklimat.ru/history/{station_id}_2.htm"),
            axis=1
        )
        # помещаем года и месяца в заголовки
        sum_of_weather = pd.DataFrame(sum_of_weather.values[1:],
                                    columns=sum_of_weather.iloc[0])
        # добавили тип спаршенных данных и номер метеостанции
        sum_of_weather['номер_станции'] = station_id
        sum_of_weather['вид_данных'] = 'Sum_Precip'

        return pd.concat([air_temperature, sum_of_weather], axis=0)
    except Exception as e:
        print("Произошло исключение:", str(e))
        print(station_id)
        fail_station_id.append(station_id)
        return None


def start_parsing(stations_filename, stations_sep=';', output_filename='output_weather.csv'):
    # Здесь нужно указать путь и название файла, в котором в столбце 'Index'
    # хранятся идентификаторы инетерсующих станций
    print("Начало парсинга")

    station_ids = pd.read_csv(directory_name + stations_filename, sep=stations_sep)
    # station_ids = pd.read_csv('/content/list_of_station_id.csv', sep=';', error_bad_lines=False)
    station_ids = station_ids['Index'].values
    # print(station_ids)

    weater_info = []

    for station_id in tqdm(station_ids):
        weater_info.append(get_weather_info(station_id))

    # Обработка полученных данных
    print("Обработка полученных данных")
    # print(weater_info)

    output_weather = pd.concat(weater_info, axis=0)
    print(output_weather)
    output_weather = output_weather[['год', 'янв', 'фев', 'мар', 'апр', 'май', 'июн', 'июл', 'авг', 'сен', 'окт', 'ноя', 'дек', 'за год', 'номер_станции', 'вид_данных']]
    output_weather.rename(columns={'год': 'Year', 'янв': 'Jan',  'фев' : 'Feb', 'мар' : 'March', 'апр': 'April', 'май' : 'May', 'июн' : 'June', 'июл' : 'July', 'авг' : 'August', 'сен' : 'September', 'окт' : 'October', 'ноя' : 'November', 'дек' : 'December', 'за год' : 'Annual', 'номер_станции' : 'Station_Number', 'вид_данных' : 'Type_data'}, inplace=True)

    output_path = directory_name + output_filename

    print("Сохранение файла")
    # Здесь нужно указать путь и имя для сохраняемого файла
    output_weather.to_csv(output_path, index=False)
    print(f"Файл сохранен: {output_path}")
    # Здесь нужно указать путь и имя для сохраняемого файла
    # if len(fail_station_id):
    #     fail_station_id = pd.DataFrame({'fail_station_id': fail_station_id})
    #     fail_station_id.to_csv('fail_station_id.csv', index=False)
    # else:
    #     print('Для всех станций нашлись показания.')

    # from google.colab import drive
    # drive.mount('/content/drive')